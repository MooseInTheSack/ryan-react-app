{"version":3,"sources":["components/common/images/Avengers_poster.jpg","components/common/images/ben_3.jpg","components/common/images/Ben_4.jpg","components/common/images/blackmane.jpg","components/common/images/Buddy_the_ant.jpg","components/About/About.js","imagePathsObject.js","components/Gallery/Gallery.js","components/Carousel/Carousel.js","components/Home/Home.js","components/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","imagesObjects","original","avengersPoster","thumbnail","ben3","ben4","blackmane","BuddyTheAnt","Gallery","Carousel","images","items","Home","Contact","App","Container","maxWidth","path","render","location","Tabs","centered","value","pathname","Tab","label","component","Link","to","href","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,gNCY5BC,MAVf,WACE,OACE,yBAAKC,UAAU,SACX,qCACA,wD,qFCAKC,EAAgB,CACrB,CACIC,SAAUC,IACVC,UAAWD,KAEf,CACID,SAAUG,IACVD,UAAWC,KAEf,CACIH,SAAUI,IACVF,UAAWE,KAEf,CACIJ,SAAUK,IACVH,UAAWG,KAEf,CACIL,SAAUM,IACVJ,UAAWI,MCVRC,MAZf,WAGE,OACE,yBAAKT,UAAU,WACX,yC,iBCQOU,MAZf,WACI,IAAMC,EAASV,EAEjB,OACE,yBAAKD,UAAU,YACX,wCACA,kBAAC,IAAD,CAAcY,MAAOD,IAFzB,MCKWE,MAXf,WACE,OACE,yBAAKb,UAAU,QACX,2DACA,kIACA,kGCKOc,MAVf,WACE,OACE,yBAAKd,UAAU,WACX,uCACA,sEC+COe,MAzCf,WACE,OACE,yBAAKf,UAAU,OAEb,kBAAC,IAAD,KACA,yBAAKA,UAAU,OACf,kBAACgB,EAAA,EAAD,CAAWC,SAAS,MAElB,kBAAC,IAAD,CACEC,KAAK,IACLC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACN,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,SAAS,OAAOC,MAAOH,EAASI,UACpC,kBAACC,EAAA,EAAD,CAAKC,MAAM,OAAOC,UAAWC,IAAMC,GAAG,MACtC,kBAACJ,EAAA,EAAD,CAAKC,MAAM,UAAUC,UAAWC,IAAMC,GAAG,aACzC,kBAACJ,EAAA,EAAD,CAAKC,MAAM,WAAWC,UAAWC,IAAMC,GAAG,cAC1C,kBAACJ,EAAA,EAAD,CACEC,MAAM,QACNI,KAAK,cACLH,UAAWC,IACXC,GAAG,WAEL,kBAACJ,EAAA,EAAD,CAAKC,MAAM,UAAUC,UAAWC,IAAMC,GAAG,cAE3C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOX,KAAK,WAAWC,OAAQL,IAC/B,kBAAC,IAAD,CAAOI,KAAK,SAASC,OAAQpB,IAC7B,kBAAC,IAAD,CAAOmB,KAAK,YAAYC,OAAQT,IAChC,kBAAC,IAAD,CAAOQ,KAAK,WAAWC,OAAQV,IAC/B,kBAAC,IAAD,CAAOS,KAAK,IAAIC,OAAQN,cC7BpBkB,QACW,cAA7BC,OAAOZ,SAASa,UAEe,UAA7BD,OAAOZ,SAASa,UAEhBD,OAAOZ,SAASa,SAASC,MACvB,2DCZNC,IAAShB,OAAO,kBAAC,EAAD,MAASiB,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0e51677e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Avengers_poster.748abc16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ben_3.6d0094b2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ben_4.7f4a8e69.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blackmane.becfcb52.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Buddy_the_ant.d5206331.jpg\";","import React from 'react';\n\nfunction About() {\n  return (\n    <div className=\"About\">\n        <h2>About</h2>\n        <p>About Ryan: he sucks...</p>\n      \n    </div>\n  );\n}\n\nexport default About;\n","import avengersPoster from './components/common/images/Avengers_poster.jpg'\nimport ben3 from './components/common/images/ben_3.jpg'\nimport ben4 from './components/common/images/Ben_4.jpg'\nimport blackmane from './components/common/images/blackmane.jpg'\nimport BuddyTheAnt from './components/common/images/Buddy_the_ant.jpg'\n\nexport const imagesObjects = [\n        { \n            original: avengersPoster,\n            thumbnail: avengersPoster,\n        },\n        { \n            original: ben3,\n            thumbnail: ben3,\n        },\n        { \n            original: ben4,\n            thumbnail: ben4,\n        },\n        { \n            original: blackmane,\n            thumbnail: blackmane,\n        },\n        { \n            original: BuddyTheAnt,\n            thumbnail: BuddyTheAnt,\n        },\n    ]","import React from 'react';\nimport {imagesObjects} from '../../imagePathsObject'\n\nfunction Gallery() {\n    const images = imagesObjects\n    \n  return (\n    <div className=\"Gallery\">\n        <h2>Gallery</h2>\n        \n      \n    </div>\n  );\n}\n\nexport default Gallery;","import React from 'react';\nimport ImageGallery from 'react-image-gallery';\nimport {imagesObjects} from '../../imagePathsObject'\n\nfunction Carousel() {\n    const images = imagesObjects\n    \n  return (\n    <div className=\"Carousel\">\n        <h2>Carousel</h2>\n        <ImageGallery items={images} />;\n      \n    </div>\n  );\n}\n\nexport default Carousel;","import React from 'react';\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n        <h2>My name is Ryan Kirkpatrick</h2>\n        <p>Welcome to my website. I'm an aspiring artist with a passion for comic books, fan art and cartoons.</p>\n        <p>I've been interested in drawing since I learned to hold a pencil.</p>\n      \n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction Contact() {\n  return (\n    <div className=\"Contact\">\n        <h2>Contact</h2>\n        <p>Ryan's website: :emoji_middle_finger:</p>\n      \n    </div>\n  );\n}\n\nexport default Contact;\n","import React, { Fragment }  from 'react';\nimport './App.css';\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Container from '@material-ui/core/Container';\nimport { Switch, Route, Link, BrowserRouter } from \"react-router-dom\";\nimport About from './components/About/About'\nimport Gallery from './components/Gallery/Gallery'\nimport Carousel from './components/Carousel/Carousel'\nimport Home from './components/Home/Home'\nimport Contact from './components/Contact/Contact'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <BrowserRouter>\n      <div className=\"App\">\n      <Container maxWidth=\"md\">\n\n        <Route\n          path=\"/\"\n          render={({ location }) => (\n            <Fragment>\n              <Tabs centered=\"true\" value={location.pathname}>\n                <Tab label=\"Home\" component={Link} to=\"/\" />\n                <Tab label=\"Gallery\" component={Link} to=\"/gallery\" />\n                <Tab label=\"Carousel\" component={Link} to=\"/carousel\" />\n                <Tab\n                  label=\"About\"\n                  href=\"#basic-tabs\"\n                  component={Link}\n                  to=\"/about\"\n                />\n                <Tab label=\"Contact\" component={Link} to=\"/contact\" />\n              </Tabs>\n              <Switch>\n                <Route path=\"/contact\" render={Contact} />\n                <Route path=\"/about\" render={About} />\n                <Route path=\"/carousel\" render={Carousel} />\n                <Route path=\"/gallery\" render={Gallery} />\n                <Route path=\"/\" render={Home} />\n              </Switch>\n            </Fragment>\n          )}\n        />\n        </Container>\n      </div>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}